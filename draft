  #if [thrown] {
  #  mutate {
  #    merge => { "[thrown][extendedStackTrace][0][file]" => "[thrown][extendedStackTrace][0][method]" }
  #    add_field => {
  #      "FULL STACK TRACE" => "%{[thrown][extendedStackTrace][0][file]} %{[thrown][extendedStackTrace][0][method]} %{[thrown][extendedStackTrace][0][class] %{[thrown][extendedStackTrace][0][line]}}"
  #    }
  #  }
  #}

            # event.remove('detail')


  date {
    match => [ "timeMillis", "UNIX_MS" ]
  }

  errors['#{i}'] = v.map { |k, v| v}.join(', ')

  filter {
    if [thrown] {
      ruby {
          code => "
            #errors = []
            errors = {}
            event.get('thrown')['extendedStackTrace'].each_with_index { |v, i|
            #   errors.push(v['file'])
              errors.store(i, v['file'])
            }
            event.set('[thrown][new]', errors)
            #event.set('[thrown][new]', errors)
          "
      }
    }
  }



  {
    //Required, JMX listening host/ip
    "host" : "localhost",
    //Required, JMX listening port
    "port" : 8890,
    "url" : "localhost:8890/actuator/jolokia"
    //Optional, the username to connect to JMX
    //"username" : "user",
    //Optional, the password to connect to JMX
    //"password": "pass",
    //Optional, use this alias as a prefix in the metric name. If not set use <host>_<port>
    //"alias" : "test.homeserver.elasticsearch",
    //Required, list of JMX metrics to retrieve
    "queries" : [
    {
      //Required, the object name of Mbean to request
      "object_name" : "java.lang:type=Memory",
      //Optional, use this alias in the metrics value instead of the object_name
      "object_alias" : "Memory"
    }, {
      "object_name" : "java.lang:type=Runtime",
      //Optional, set of attributes to retrieve. If not set retrieve
      //all metrics available on the configured object_name.
      "attributes" : [ "Uptime", "StartTime" ],
      "object_alias" : "Runtime"
    }, {
      //object_name can be configured with * to retrieve all matching Mbeans
      "object_name" : "java.lang:type=GarbageCollector,name=*",
      "attributes" : [ "CollectionCount", "CollectionTime" ],
      //object_alias can be based on specific value from the object_name thanks to ${<varname>}.
      //In this case ${type} will be replaced by GarbageCollector...
      "object_alias" : "${type}.${name}"
    }, {
      "object_name" : "java.nio:type=BufferPool,name=*",
      "object_alias" : "${type}.${name}"
    } ]
  }